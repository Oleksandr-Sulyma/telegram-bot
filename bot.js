// –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –±—ñ–±–ª—ñ–æ—Ç–µ–∫
require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const axios = require('axios');
const express = require('express'); // –î–æ–¥–∞—î–º–æ Express

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Express-–¥–æ–¥–∞—Ç–∫—É
const app = express();
app.use(express.json()); // Middleware –¥–ª—è —Ä–æ–∑–±–æ—Ä—É JSON-—Ç—ñ–ª–∞ –∑–∞–ø–∏—Ç—ñ–≤

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞ —Ç–∞ –∫–æ–Ω—Å—Ç–∞–Ω—Ç
const BOT_TOKEN = process.env.BOT_TOKEN;
const MONOBANK_TOKEN = process.env.MONOBANK_TOKEN;
// –ó–ê–ú–Ü–ù–Ü–¢–¨ –ù–ê –í–ê–® –†–ï–ê–õ–¨–ù–ò–ô TELEGRAM ID –ê–î–ú–Ü–ù–Ü–°–¢–†–ê–¢–û–†–ê
const ADMIN_TELEGRAM_ID = process.env.ADMIN_TELEGRAM_ID; // –ù–∞–ø—Ä–∏–∫–ª–∞–¥: 123456789
const BOT_USERNAME = process.env.BOT_USERNAME; // Username –≤–∞—à–æ–≥–æ –±–æ—Ç–∞ –±–µ–∑ "@"
// URL –≤–∞—à–æ–≥–æ –ø—ñ–¥–¥–æ–º–µ–Ω—É –¥–ª—è –≤–µ–±—Ö—É–∫—ñ–≤ (–ø–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—å, —â–æ —î HTTPS)
const WEBHOOK_BASE_URL = process.env.WEBHOOK_BASE_URL; // –ù–∞–ø—Ä–∏–∫–ª–∞–¥: https://bot.sulyma.pp.ua

if (!BOT_TOKEN || !MONOBANK_TOKEN || !ADMIN_TELEGRAM_ID || !BOT_USERNAME || !WEBHOOK_BASE_URL) {
  console.error("–ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞: BOT_TOKEN, MONOBANK_TOKEN, ADMIN_TELEGRAM_ID, BOT_USERNAME, WEBHOOK_BASE_URL");
  process.exit(1);
}

const bot = new TelegramBot(BOT_TOKEN, { polling: true });

// –û–≥–æ–ª–æ—à–µ–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –ø–æ—Å–ª—É–≥
const services = {
  consultation: {
    title: '–ó–≤–∏—á–∞–π–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è',
    amount: 54900
  },
  urgent_consultation: {
    title: '–¢–µ—Ä–º—ñ–Ω–æ–≤–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è',
    amount: 109900
  },
  deferral_support: {
    title: '–°—É–ø—Ä–æ–≤—ñ–¥ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ñ –≤—ñ–¥—Å—Ç—Ä–æ—á–∫–∏',
    amount: 109900
  },
  tck_support: {
    title: '–°—É–ø—Ä–æ–≤—ñ–¥ –≤ –¢–¶–ö',
    amount: 54900
  },
  protocol_appeal: {
    title: '–û—Å–∫–∞—Ä–∂–µ–Ω–Ω—è –ø—Ä–æ—Ç–æ–∫–æ–ª—É',
    amount: 109900
  }
};

// –ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç—É - –≤–∏–±—ñ—Ä –ø–æ—Å–ª—É–≥
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
   // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —Ü–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏ (–¥–ª—è —É–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –º–µ–Ω—é)
  if (msg.text.startsWith('/start paid_')) {
    return; // –û–±—Ä–æ–±–∫–∞ —Ü—ñ—î—ó –ª–æ–≥—ñ–∫–∏ –≤–∂–µ —î –≤ —ñ–Ω—à–æ–º—É –æ–±—Ä–æ–±–Ω–∏–∫—É
  }
  const keyboard = [
    [{ text: services.consultation.title, callback_data: 'consultation' }],
    [{ text: services.urgent_consultation.title, callback_data: 'urgent_consultation' }],
    [{ text: services.deferral_support.title, callback_data: 'deferral_support' }],
    [{ text: services.tck_support.title, callback_data: 'tck_support' }],
    [{ text: services.protocol_appeal.title, callback_data: 'protocol_appeal' }]
  ];

  bot.sendMessage(chatId, '–û–±–µ—Ä—ñ—Ç—å –ø–æ—Å–ª—É–≥—É:', {
    reply_markup: { inline_keyboard: keyboard }
  });
});

// –û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É –ø–æ—Å–ª—É–≥–∏
bot.on('callback_query', async (query) => {
  const chatId = query.message.chat.id;
  const userId = query.from.id; // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
  const usernameForNotification = query.from.username || userId.toString();

  const serviceKey = query.data;
  const service = services[serviceKey];
  if (!service) {
      bot.answerCallbackQuery(query.id);
      return;
  }

  let finalAmount = service.amount;
  let referenceId = `order_${userId}_${Date.now()}`;
  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä (–ø–æ—Ä—ñ–≤–Ω—é—î–º–æ —Ä—è–¥–∫–∏, –±–æ ADMIN_TELEGRAM_ID –∑ .env –±—É–¥–µ —Ä—è–¥–∫–æ–º)
  const isAdminPayment = userId.toString() === ADMIN_TELEGRAM_ID;

  if (isAdminPayment) {
    finalAmount = 100; // 1 –≥—Ä–Ω –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂—É
    referenceId = `test_${referenceId}`;
    const adminTestMessage = `‚ùóÔ∏è –ê–∫—Ç–∏–≤–æ–≤–∞–Ω–æ —Ç–µ—Å—Ç–æ–≤–∏–π —Ä–µ–∂–∏–º –æ–ø–ª–∞—Ç–∏ –¥–ª—è –ø–æ—Å–ª—É–≥–∏ "${service.title}".\n` +
                             `–°—É–º–∞: ${finalAmount / 100} –≥—Ä–Ω.\n` +
                             `–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ñ –∫–∞—Ä—Ç–∫–æ–≤—ñ –¥–∞–Ω—ñ Monobank:\n` +
                             `üîó https://api.monobank.ua/docs/acquiring/metody/internet-ekvairynh/testovi-dani-kart.html`;
    try {
        await bot.sendMessage(chatId, adminTestMessage);
    } catch (e) {
        console.error("Error sending test mode message to admin:", e);
    }
  }

  const webHookPath = '/monobank-webhook';
  const webHookUrl = `${WEBHOOK_BASE_URL}${webHookPath}`;

  try {
    const invoicePayload = {
      amount: finalAmount,
      ccy: 980,
      merchantPaymInfo: {
        reference: referenceId,
        destination: `–û–ø–ª–∞—Ç–∞ –∑–∞ –ø–æ—Å–ª—É–≥—É: ${service.title}`
      },
      redirectUrl: `https://t.me/${BOT_USERNAME}?start=paid_${usernameForNotification}`,
      webHookUrl: webHookUrl, // –î–æ–¥–∞—î–º–æ URL –≤–µ–±—Ö—É–∫–∞
      validity: 3600, // –¢–µ—Ä–º—ñ–Ω –¥—ñ—ó —Ä–∞—Ö—É–Ω–∫—É –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
    };

    const invoiceResponse = await axios.post(
      'https://api.monobank.ua/api/merchant/invoice/create',
      invoicePayload,
      {
        headers: {
          'X-Token': MONOBANK_TOKEN
        }
      }
    );

    const paymentUrl = invoiceResponse.data.pageUrl;
    const invoiceId = invoiceResponse.data.invoiceId;
    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ —è–∫—É—Å—å —Ç–∏–º—á–∞—Å–æ–≤—É –∑–º—ñ–Ω–Ω—É –∞–±–æ –±–∞–∑—É –¥–∞–Ω–∏—Ö –∑–≤'—è–∑–æ–∫ referenceId —Ç–∞ chatId
    // –¥–ª—è –º–∞–π–±—É—Ç–Ω—å–æ–≥–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —á–µ—Ä–µ–∑ –≤–µ–±—Ö—É–∫.
    // –ù–∞–ø—Ä–∏–∫–ª–∞–¥: activeInvoices[referenceId] = { chatId: chatId, userId: userId, serviceTitle: service.title };
    // –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç–∏, –ø–æ–∫–∏ —â–æ —Ü–µ–π –∫—Ä–æ–∫ –ø—Ä–æ–ø—É—Å—Ç–∏–º–æ, –∞–ª–µ –≤—ñ–Ω –≤–∞–∂–ª–∏–≤–∏–π –¥–ª—è —Ä–µ–∞–ª—å–Ω–∏—Ö —Å–ø–æ–≤—ñ—â–µ–Ω—å.

    await bot.sendMessage(chatId, `–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –æ–ø–ª–∞—Ç–∏ –ø–æ—Å–ª—É–≥–∏ "${service.title}" (${finalAmount/100} –≥—Ä–Ω), –ø–µ—Ä–µ–π–¥—ñ—Ç—å –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º:\n${paymentUrl}\n\nID —Ä–∞—Ö—É–Ω–∫—É: ${invoiceId}`);
  } catch (error) {
    console.error('Error creating Monobank invoice:', error.response ? error.response.data : error.message);
    await bot.sendMessage(chatId, '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ —Ä–∞—Ö—É–Ω–∫—É. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');
  }

  bot.answerCallbackQuery(query.id);
});

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏
bot.onText(/\/start paid_(.+)/, (msg, match) => {
  const chatId = msg.chat.id;
  const paidUsername = match[1];

  bot.sendMessage(chatId, `–î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à –∑–∞–ø–∏—Ç! –ó–∞–ª–∏—à—Ç–µ, –±—É–¥—å –ª–∞—Å–∫–∞, –≤–∞—à –∫–æ–Ω—Ç–∞–∫—Ç–Ω–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É, —ñ –Ω–∞—à —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç –∑–≤'—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.`, {
    reply_markup: {
      keyboard: [
        [{ text: 'üì± –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º', request_contact: true }]
      ],
      resize_keyboard: true,
      one_time_keyboard: true
    }
  });

  // –Ü–Ω—Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ ADMIN_TELEGRAM_ID –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è)
  if (ADMIN_TELEGRAM_ID) {
    bot.sendMessage(ADMIN_TELEGRAM_ID, `–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á @${paidUsername} (–∞–±–æ ID: ${paidUsername}) –ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –ø—ñ—Å–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–∞—Ö—É–Ω–∫—É —Ç–∞ –π–æ–º—É –∑–∞–ø—Ä–æ–ø–æ–Ω–æ–≤–∞–Ω–æ –∑–∞–ª–∏—à–∏—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç.`);
  }
});

// –û–±—Ä–æ–±–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
bot.on('contact', (msg) => {
  const contact = msg.contact;
  const username = msg.from.username || msg.from.id;
  const chatId = msg.chat.id;

  const contactInfo = `üìû –û—Ç—Ä–∏–º–∞–Ω–æ –∫–æ–Ω—Ç–∞–∫—Ç –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ${username}:\n` +
                      `–Ü–º'—è: ${contact.first_name}${contact.last_name ? ' ' + contact.last_name : ''}\n` +
                      `–¢–µ–ª–µ—Ñ–æ–Ω: ${contact.phone_number}\n` +
                      `Telegram User ID: ${contact.user_id || '–Ω–µ –≤–∫–∞–∑–∞–Ω–æ'}`;

  if (ADMIN_TELEGRAM_ID) {
    bot.sendMessage(ADMIN_TELEGRAM_ID, contactInfo);
  }

  bot.sendMessage(chatId, `–î—è–∫—É—é! –í–∞—à –∫–æ–Ω—Ç–∞–∫—Ç ${contact.phone_number} –æ—Ç—Ä–∏–º–∞–Ω–æ. –ú–∏ –∑–≤'—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.`);
});


// === –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –≤–µ–±—Ö—É–∫–∞ –≤—ñ–¥ Monobank ===
// –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç–∏, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç–æ–π —Å–∞–º–∏–π —à–ª—è—Ö, —â–æ –π —É webHookPath
app.post('/monobank-webhook', (req, res) => {
  console.log('–û—Ç—Ä–∏–º–∞–Ω–æ –≤–µ–±—Ö—É–∫ –≤—ñ–¥ Monobank!');
  const paymentInfo = req.body;
  console.log('–¢—ñ–ª–æ –≤–µ–±—Ö—É–∫–∞:', JSON.stringify(paymentInfo, null, 2));

  // TODO: –î—É–∂–µ –≤–∞–∂–ª–∏–≤–æ! –†–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –ø—ñ–¥–ø–∏—Å—É Monobank 'X-Sign' –¥–ª—è –±–µ–∑–ø–µ–∫–∏.
  // const signatureFromHeader = req.headers['x-sign'];
  // –¢—É—Ç –º–∞—î –±—É—Ç–∏ –ª–æ–≥—ñ–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—ñ–¥–ø–∏—Å—É –∑ –≤–∞—à–∏–º –ø—É–±–ª—ñ—á–Ω–∏–º –∫–ª—é—á–µ–º –≤—ñ–¥ Monobank.

  const status = paymentInfo.status;
  const reference = paymentInfo.reference; // –í–∞—à `referenceId`
  const invoiceId = paymentInfo.invoiceId;

  if (status === 'success') {
    console.log(`–ü–ª–∞—Ç—ñ–∂ –£–°–ü–Ü–®–ù–ò–ô –¥–ª—è reference: ${reference}, invoiceId: ${invoiceId}`);
    // –¢—É—Ç –≤–∏ –± –∑–Ω–∞–π—à–ª–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞ reference (–ø–æ—Ç—Ä—ñ–±–Ω–æ –±—É–ª–æ –± –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –∑–≤'—è–∑–æ–∫ chatId/userId –∑ reference)
    // —ñ –Ω–∞–¥—ñ—Å–ª–∞–ª–∏ –± –π–æ–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—à–Ω—É –æ–ø–ª–∞—Ç—É.
    // –ù–∞–ø—Ä–∏–∫–ª–∞–¥:
    // const invoiceData = activeInvoices[reference];
    // if (invoiceData) {
    //   bot.sendMessage(invoiceData.chatId, `–û–ø–ª–∞—Ç–∞ –∑–∞ –ø–æ—Å–ª—É–≥—É "${invoiceData.serviceTitle}" —É—Å–ø—ñ—à–Ω–∞! –î—è–∫—É—î–º–æ.`);
    //   delete activeInvoices[reference]; // –í–∏–¥–∞–ª–∏—Ç–∏ –æ–±—Ä–æ–±–ª–µ–Ω–∏–π —Ä–∞—Ö—É–Ω–æ–∫
    // }
    if (ADMIN_TELEGRAM_ID) {
        bot.sendMessage(ADMIN_TELEGRAM_ID, `‚úÖ –£—Å–ø—ñ—à–Ω–∞ –æ–ø–ª–∞—Ç–∞ (–≤–µ–±—Ö—É–∫):\nReference: ${reference}\nInvoice ID: ${invoiceId}\n–°—É–º–∞: ${paymentInfo.amount / 100} ${paymentInfo.ccy === 980 ? 'UAH' : paymentInfo.ccy}`);
    }

  } else if (status === 'failure') {
    console.log(`–ü–ª–∞—Ç—ñ–∂ –ù–ï–í–î–ê–õ–ò–ô –¥–ª—è reference: ${reference}, invoiceId: ${invoiceId}. –ü—Ä–∏—á–∏–Ω–∞: ${paymentInfo.failureReason}`);
     if (ADMIN_TELEGRAM_ID) {
        bot.sendMessage(ADMIN_TELEGRAM_ID, `‚ùå –ù–µ–≤–¥–∞–ª–∞ –æ–ø–ª–∞—Ç–∞ (–≤–µ–±—Ö—É–∫):\nReference: ${reference}\nInvoice ID: ${invoiceId}\n–ü—Ä–∏—á–∏–Ω–∞: ${paymentInfo.failureReason}`);
    }
  } else {
    console.log(`–û—Ç—Ä–∏–º–∞–Ω–æ –≤–µ–±—Ö—É–∫ –∑—ñ —Å—Ç–∞—Ç—É—Å–æ–º: ${status} –¥–ª—è reference: ${reference}`);
     if (ADMIN_TELEGRAM_ID) {
        bot.sendMessage(ADMIN_TELEGRAM_ID, `üîî –í–µ–±—Ö—É–∫ Monobank:\nStatus: ${status}\nReference: ${reference}\nInvoice ID: ${invoiceId}`);
    }
  }

  res.status(200).send('OK'); // –ó–∞–≤–∂–¥–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ Monobank —Å—Ç–∞—Ç—É—Å–æ–º 200 OK
});

// === –ó–∞–ø—É—Å–∫ HTTP-—Å–µ—Ä–≤–µ—Ä–∞ ===
const PORT = process.env.PORT; // CityHost –Ω–∞–¥–∞—Å—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Å–æ–∫–µ—Ç —Ç—É—Ç

if (!PORT) {
  console.error("–ó–º—ñ–Ω–Ω–∞ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ PORT –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞! –ó–∞–ø—É—Å–∫ –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–º—É –ø–æ—Ä—Ç—ñ 3000.");
  // –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –º–æ–∂–Ω–∞ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –ø–æ—Ä—Ç –≤—Ä—É—á–Ω—É
  app.listen(3000, () => {
    console.log(`–¢–µ—Å—Ç–æ–≤–∏–π —Å–µ—Ä–≤–µ—Ä Express –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ http://localhost:3000`);
    console.log(`–í–µ–±—Ö—É–∫ –æ—á—ñ–∫—É—î—Ç—å—Å—è –Ω–∞ /monobank-webhook`);
    console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π –ª–æ–∫–∞–ª—å–Ω–æ (polling)...');
  });
} else {
  // –ó–∞–ø—É—Å–∫ –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥—É
  app.listen(PORT, () => {
    console.log(`–°–µ—Ä–≤–µ—Ä Express –∑–∞–ø—É—â–µ–Ω–æ —ñ —Å–ª—É—Ö–∞—î –Ω–∞ —Å–æ–∫–µ—Ç—ñ (process.env.PORT)`);
    console.log(`–í–µ–±—Ö—É–∫ –æ—á—ñ–∫—É—î—Ç—å—Å—è –Ω–∞ ${WEBHOOK_BASE_URL}/monobank-webhook`);
    console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥—É (polling)...');
  });
}

// –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ polling –¥–ª—è –±–æ—Ç–∞ (–º–æ–∂–Ω–∞ –∑–∞–ª–∏—à–∏—Ç–∏, —è–∫—â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç–µ)
bot.on('polling_error', (error) => {
  console.error(`Polling error: ${error.code} - ${error.message}`);
});

console.log('–ë–æ—Ç —Ç–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –Ω–∞–º–∞–≥–∞—é—Ç—å—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç–∏—Å—å...');